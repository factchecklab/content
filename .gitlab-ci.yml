stages:
  - test
  - build
  - deploy

test:
  image: ghost:3
  stage: test
  before_script:
    - npm install -g gscan
  script:
    - gscan ghost/themes/casper-maat

build_image:
  image: docker:19.03.1
  stage: build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: on_success
  services:
    - docker:19.03.1-dind
  variables:
    GCR_IMAGE_TAG: $GCR_IMAGE:git-$CI_COMMIT_SHORT_SHA
    GITLAB_IMAGE_TAG: $CI_REGISTRY_IMAGE:git-$CI_COMMIT_SHORT_SHA
    DOCKER_BUILDKIT: 1
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u _json_key --password-stdin $GCR_REGISTRY < "$GOOGLE_SERVICE_ACCOUNT_CREDENTIALS"
  script:
    - docker build -t $GITLAB_IMAGE_TAG -f Dockerfile .
    - docker push $GITLAB_IMAGE_TAG
    - docker tag $GITLAB_IMAGE_TAG $GCR_IMAGE_TAG
    - docker push $GCR_IMAGE_TAG

deploy:
  image: google/cloud-sdk:alpine
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
  environment: master
  variables:
    GCR_IMAGE_TAG: $GCR_IMAGE:git-$CI_COMMIT_SHORT_SHA
  before_script:
    - gcloud auth activate-service-account --key-file "$GOOGLE_SERVICE_ACCOUNT_CREDENTIALS"
  script:
    - |
      gcloud run deploy $GCLOUD_RUN_SERVICE_NAME \
        --image $GCR_IMAGE_TAG \
        --region $GCLOUD_RUN_REGION \
        --platform managed \
        --project $GCLOUD_PROJECT_ID
